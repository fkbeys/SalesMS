// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesMS.Services.Order.OrderInfrastructure.DbContexts;

#nullable disable

namespace SalesMS.Services.Order.OrderInfrastructure.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20230601190617_sx")]
    partial class sx
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalesMs.Services.Order.OrderDomain.OrderAggregate.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OrderModelId")
                        .HasColumnType("int");

                    b.Property<string>("pictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("productId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderModelId");

                    b.ToTable("OrderItems", "Ordering");
                });

            modelBuilder.Entity("SalesMs.Services.Order.OrderDomain.OrderAggregate.OrderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("buyerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders", "Ordering");
                });

            modelBuilder.Entity("SalesMs.Services.Order.OrderDomain.OrderAggregate.OrderItem", b =>
                {
                    b.HasOne("SalesMs.Services.Order.OrderDomain.OrderAggregate.OrderModel", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderModelId");
                });

            modelBuilder.Entity("SalesMs.Services.Order.OrderDomain.OrderAggregate.OrderModel", b =>
                {
                    b.OwnsOne("SalesMs.Services.Order.OrderDomain.OrderAggregate.Address", "adress", b1 =>
                        {
                            b1.Property<int>("OrderModelId")
                                .HasColumnType("int");

                            b1.Property<string>("district")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("provience")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("zipcode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OrderModelId");

                            b1.ToTable("Orders", "Ordering");

                            b1.WithOwner()
                                .HasForeignKey("OrderModelId");
                        });

                    b.Navigation("adress")
                        .IsRequired();
                });

            modelBuilder.Entity("SalesMs.Services.Order.OrderDomain.OrderAggregate.OrderModel", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
